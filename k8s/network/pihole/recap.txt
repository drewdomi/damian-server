# Recapitulação: Configuração de Load Balancer para Pi-hole no Kubernetes

Vamos recapitular todo o processo que seguimos para configurar o Pi-hole com Load Balancer no Kubernetes:

## 1. Configuração do MetalLB

Primeiro, instalamos e configuramos o MetalLB para fornecer IPs externos para os serviços:

- Instalamos o MetalLB no cluster
- Configuramos um pool de IPs (192.168.1.110-192.168.1.130) no namespace "network"
- Criamos um L2Advertisement para anunciar esses IPs na rede

## 2. Configuração dos serviços do Pi-hole

Configuramos os seguintes serviços para o Pi-hole:

- `pihole-dns-tcp` (LoadBalancer, porta 53/TCP)
- `pihole-dns-udp` (LoadBalancer, porta 53/UDP)
- `pihole-web` (ClusterIP, portas 80 e 443)
- `pihole-dhcp` (LoadBalancer, porta 67/UDP)

Os serviços DNS TCP e UDP compartilharam o mesmo IP externo (192.168.1.113), o que é o comportamento desejado para DNS.

## 3. Resolução de problemas

Enfrentamos e resolvemos vários problemas:

1. **Configuração do MetalLB:**
   - Corrigimos o formato do pool de IPs
   - Garantimos que o L2Advertisement estivesse configurado corretamente

2. **Atribuição de IPs pelo MetalLB:**
   - Usamos anotações para atribuir IPs específicos aos serviços
   - Confirmamos que serviços TCP e UDP poderiam compartilhar o mesmo IP

3. **Problema de DNS não funcionando:**
   - Identificamos logs de erro: "ignoring query from non-local network"
   - Tentamos criar um ConfigMap para personalizar a configuração do dnsmasq
   - Enfrentamos um erro de "illegal repeated keyword" na configuração personalizada

4. **Solução final:**
   - Definimos a variável de ambiente `DNSMASQ_LISTENING=all` para permitir consultas externas
   - Também configuramos `DNS_FQDN_REQUIRED=false` e `DNS_BOGUS_PRIV=false` para maior compatibilidade
   - Evitamos usar `hostNetwork: true` que causava conflitos de portas ("Address in use")

## 4. Integração com Traefik

Embora não tenhamos implementado completamente, discutimos:
- Usar Traefik como um Ingress para a interface web do Pi-hole
- Possibilidade de configurar Traefik como proxy TCP/UDP para DNS

## 5. Considerações sobre armazenamento persistente

Para garantir que as configurações do Pi-hole persista, mencionamos:
- Uso de PersistentVolumeClaims para os dados do Pi-hole
- Alternativa de usar HostPath para mapear diretamente os diretórios do host

## Conclusão

A chave para fazer o Pi-hole funcionar corretamente no Kubernetes com acesso externo foi:
1. Configurar corretamente o MetalLB
2. Atribuir os mesmos IPs externos para os serviços DNS TCP e UDP
3. Configurar o Pi-hole para aceitar consultas de redes externas com `DNSMASQ_LISTENING=all`
4. Evitar conflitos com a rede do host

Esta configuração permite que o Pi-hole funcione como um servidor DNS para toda a rede local, bloqueando anúncios e rastreadores, tudo executado dentro do Kubernetes.